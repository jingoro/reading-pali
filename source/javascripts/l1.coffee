paliDict =
  "buddhaṃ": "Buddha"
  "saraṇaṃ": "refuge"
  "gacchāmi": "I go to"
  "dhammaṃ": "Dhamma"
  "saṃghaṃ": "Sangha"
  "dutiyaṃ": "second time"
  "pi": "again"
  "tatiyaṃ": "third time"
  "ti": "\""

  "cittaṃ": "mind"
  "bhikkhave": "o' monks"
  "adantaṃ": "untamed"
  "mahato": "great"
  "anatthāya": "for disadvantage"
  "saṃvattatī": "leads to him/her/it"
  "saṃvattantī": "leads to them"
  "dantaṃ": "tamed"
  "atthāya": "for advantage"
  "aguttaṃ": "unguarded"
  "guttaṃ": "guarded"
  "arakkhitaṃ": "unprotected"
  "rakkhitaṃ": "protected"
  "asaṃvutaṃ": "unrestrained"
  "saṃvutaṃ": "restrained"
  "nāhaṃ": "not I"
  "aññaṃ": "another"
  "ekadhammaṃ": "single thing"
  "samanupassāmi": "I see"
  "yaṃ": "that"
  "evaṃ": "thus"
  "yathayidaṃ": "that is to say"

  "sammādiṭṭhi": "right view"
  "sammādiṭṭhikassa": "one with right view"
  "micchādiṭṭhi": "wrong view"
  "micchādiṭṭhikassa": "one with wrong view"
  "anuppannā": "unarisen"
  "anuppannānaṃ": "of unarisen"
  "uppannānaṃ": "of arisen"
  "ca": "and"
  "eva": "indeed"
  "c'eva": "and indeed"
  "akusalā": "unwholesome"
  "kusalā": "wholesome"
  "dhammā": "things"
  "uppajjanti": "they arise"
  "n'uppajjanti": "they don't arise"
  "uppannā": "arisen"
  "vepullāya": "for fullness"
  "yena": "by which"
  "vā": "or"
  "parihāyanti": "they decrease"
  "parihāyantī": "they decrease"

  "bhikkhu": "monk"
  "pāpakānaṃ": "of evil"
  "akusalānaṃ": "of unwholesome"
  "kusalānaṃ": "of wholesome"
  "dhammānaṃ": "of things"
  "anuppādāya": "for nonarising"
  "uppādāya": "for arising"
  "chandaṃ": "desire"
  "janeti": "s/he generates"
  "vāyamati": "he endevours"
  "viriyaṃ": "energy"
  "ārabhati": "he arouses"
  "paggaṇhati": "he applies"
  "padahati": "he strives"
  "pahānāya": "for abandonding"
  "ṭhitiyā": "for continuation"
  "asammosāya": "for non-confusion"
  "bhiyyobhāvāya": "for increase"
  "vepullāya": "for expansion"
  "bhāvanāya": "for development"
  "pāripūriyā": "for fulfillment"

$('li.p').each (_, li) ->
  li = $(li)
  html = li.html().split(' ')
  result = []
  for word, i in html
    key = word.replace(/[,.;…]/g, '').toLowerCase()
    trans = paliDict[key]
    if trans
      result.push "<span class=\"t\" title=\"#{trans}\">#{word}</span>"
    else
      result.push "<span class=\"error\">#{word}</span>"
  li.html(result.join(' '))
